// <auto-generated />
using Loan.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loan.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230629044757_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Loan.Models.AdminModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Loan.Models.DocumentModel", b =>
                {
                    b.Property<int>("documentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("documentId"));

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.Property<string>("documenttype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("documentupload")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("documentId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("Loan.Models.LoanApplicantModel", b =>
                {
                    b.Property<int>("loanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("loanId"));

                    b.Property<string>("applicantAadhaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicantAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicantEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicantMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicantPan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("applicantSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loanAmountRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loanRepaymentMonths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loantype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("loanId");

                    b.ToTable("LoanApplicant");
                });

            modelBuilder.Entity("Loan.Models.LoginModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("Loan.Models.UserModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
